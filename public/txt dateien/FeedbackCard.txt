import { useRef, useState, useEffect } from "react";
import { Star, ShieldCheck } from "lucide-react";

export default function FeedbackCard({
  review,
  accentColor = "#f8f8f8",
  nameColor = "#222",
  commentColor = "#222",
  dateColor = "#222",
  boxRadius = "16px",
  textFontSize = "14px",
  stylePreset = "classic"
}) {
 // GANZ OBEN in der Komponente:
const [expanded, setExpanded] = useState(false);
const [showButton, setShowButton] = useState(false);
const [commentHeight, setCommentHeight] = useState(0);
const commentRef = useRef(null);

useEffect(() => {
  if (commentRef.current) {
    const el = commentRef.current;
    const lineHeight = parseFloat(getComputedStyle(el).lineHeight);
    const visibleLines = 1;
    const maxHeight = lineHeight * visibleLines;

    if (el.scrollHeight > maxHeight + 2) {
      setShowButton(true);
    }
    setCommentHeight(expanded ? el.scrollHeight : maxHeight);
  }
  // eslint-disable-next-line
}, [expanded]);


  let boxClasses = "p-4 flex flex-col";
  if (stylePreset === "glass") {
    boxClasses += " bg-white/10 backdrop-blur-lg border border-white/30 shadow-lg";
  } else if (stylePreset === "flat") {
    boxClasses += " bg-transparent border border-gray-200 shadow-none";
  } else if (stylePreset === "transparent") {
    boxClasses += " bg-white/20 backdrop-blur-sm border border-white/30 shadow-md";
  } else {
    boxClasses += " bg-white shadow-lg";
  }

  return (
    <div className="min-w-[260px] max-w-[260px] flex-shrink-0">
      <div
  className={`${boxClasses} ${expanded ? "" : "min-h-[120px]"}`}
  style={{
    backgroundColor: stylePreset === "transparent" ? "transparent" : accentColor,
    borderRadius: boxRadius,
    fontSize: textFontSize,
    position: "relative",
    minHeight: "115px", // das reicht, KEIN transition hier!
  }}
>

        {/* Name + Badge + Sterne */}
        <div className="flex items-center gap-2 mb-1">
          <div className="relative group">
            <div className="flex items-center justify-center w-6 h-6 bg-white/20 rounded-full shadow-inner group-hover:animate-bounce-slow transition-transform">
              <ShieldCheck className="w-4 h-4 text-green-500" />
            </div>
            <div className="absolute left-full top-1/2 -translate-y-1/2 ml-2 bg-gray-800 text-white text-[10px] px-2 py-1 rounded opacity-0 group-hover:opacity-100 transition whitespace-nowrap z-50 shadow">
              Verifiziert durch KI-Partner
            </div>
          </div>

          <p className="font-semibold text-base" style={{ color: nameColor }}>
            {review.name}
          </p>

          <div className="flex items-center">
            {Array.from({ length: 5 }, (_, index) => (
              <Star
                key={index}
                className="h-4 w-4"
                style={{ color: index < review.rating ? "#facc15" : "#d1d5db" }}
                fill={index < review.rating ? "currentColor" : "none"}
              />
            ))}
          </div>
        </div>

        {/* Kommentar */}
        <p
  ref={commentRef}
  className={`italic transition-all duration-500 ease-in-out overflow-hidden`}
  style={{
    color: commentColor,
    maxHeight: `${commentHeight}px`,
    lineHeight: "1.5",
    marginBottom: showButton ? "0.25rem" : 0,
  }}
>
  "{review.comment}"
</p>

        {showButton && (
          <button
            onClick={() => setExpanded(!expanded)}
            className="text-sm text-blue-600 mt-1 self-start hover:underline"
          >
            {expanded ? "Verbergen" : "Weiterlesen"}
          </button>
        )}

        {/* Datum */}
        <p
          className="absolute bottom-3 right-5"
          style={{ color: dateColor, fontSize: "14px"}}
        >
          {review.date}
        </p>
      </div>
    </div>
  );
}
